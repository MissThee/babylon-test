var u=Object.defineProperty;var p=(t,o,r)=>o in t?u(t,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[o]=r;var s=(t,o,r)=>(p(t,typeof o!="symbol"?o+"":o,r),r);import{S as a}from"./standardMaterial.fe3baa28.js";import{a0 as c,J as m}from"./test1.990751a6.js";import"./material.4eb4d890.js";import"./boundingInfo.71d69726.js";import"./math.functions.ef221795.js";import"./materialHelper.19d69264.js";import"./node.0c51c0e0.js";import"./light.40a4b08b.js";import"./thinMaterialHelper.ab63cfd8.js";import"./clipPlaneVertex.58e6a1d5.js";import"./math.size.f34aa5eb.js";import"./effectFallbacks.db57095f.js";import"./imageProcessingFunctions.117736a4.js";import"./instancesDeclaration.872520ba.js";import"../entry/index.a3769e15.js";var d="./assets/mp3/bounce1.3cdb92da.mp3",l="./assets/mp3/bounce2.c1265acd.mp3",b="./assets/mp3/bounce3.6f2937db.mp3";const i={StandardMaterial:a,Sound:c,PointerEventTypes:m};let e;class F{constructor(o){s(this,"scene");s(this,"soundBounceArr",[]);s(this,"soundBounceFilePathArr",[d,l,b]);if(e)return e;this.scene=o,o.onPointerObservable.add(r=>{switch(r.type){case i.PointerEventTypes.POINTERDOWN:this.soundBounceArr.length===0&&this.soundBounceFilePathArr.forEach(n=>{this.soundBounceArr.push(new i.Sound(n.substring(n.lastIndexOf("/")+1,n.lastIndexOf(".")),n,null,null,{}))}),this.soundBounceArr[0].play()}}),e=this}}export{F as default};
