var m=Object.defineProperty;var l=(r,e,i)=>e in r?m(r,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[e]=i;var n=(r,e,i)=>(l(r,typeof e!="symbol"?e+"":e,i),i);import"./@babylonjscore_abstractScene.d5c48c49.js";import"./@babylonjscore_Actions.7cce3f43.js";import"./@babylonjscore_Animations.615099a9.js";import{C as h}from"./@babylonjscore_Maths.f3ef132c.js";import"./@babylonjscore_assetContainer.cba3bd62.js";import"./@babylonjscore_Engines.7287f97a.js";import"./@babylonjscore_Misc.d81f49ec.js";import"./@babylonjscore_Audio.4b8bc6d9.js";import"./@babylonjscore_BakedVertexAnimation.61d84081.js";import{S as d}from"./@babylonjscore_Materials.00e32dae.js";import"./@babylonjscore_Behaviors.df7c289a.js";import"./@babylonjscore_Bones.4bdc5845.js";import"./@babylonjscore_Buffers.f937a5fd.js";import"./@babylonjscore_Cameras.db49b33d.js";import"./@babylonjscore_PostProcesses.4413212a.js";import"./@babylonjscore_Collisions.6bd46217.js";import"./@babylonjscore_Compute.71e01459.js";import"./@babylonjscore_Culling.457ad209.js";import"./@babylonjscore_Debug.c6d392dc.js";import{p as s}from"./@babylonjscore_Meshes.307935b5.js";import{P as o}from"./@babylonjscore_Physics.24606c9c.js";import"./@babylonjscore_Rendering.3a43e73e.js";import"./@babylonjscore_DeviceInput.c0f43152.js";import"./@babylonjscore_Events.8e5561d2.js";import"./@babylonjscore_Gamepads.ef488051.js";import"./@babylonjscore_Gizmos.8d63c4cf.js";import"./@babylonjscore_Helpers.51c9113b.js";import"./@babylonjscore_Instrumentation.93aca872.js";import"./@babylonjscore_Layers.c0605bf5.js";import"./@babylonjscore_LensFlares.ff1874ee.js";import"./@babylonjscore_Lights.ab2a2b54.js";import"./@babylonjscore_Loading.6509a8cd.js";import"./@babylonjscore_Morph.df37bd75.js";import"./@babylonjscore_node.60f33419.js";import"./@babylonjscore_Offline.9556dedd.js";import"./@babylonjscore_Particles.ea0a1760.js";import"./@babylonjscore_Probes.43ac1e9d.js";import"./@babylonjscore_scene.fc9d9dc0.js";import"./@babylonjscore_sceneComponent.4b70ec43.js";import"./@babylonjscore_Sprites.b7f7c371.js";import"./@babylonjscore_States.219926cb.js";import"./@babylonjscore_Shaders.73b25e8e.js";import"./@babylonjscore_XR.7f7d2945.js";import"./@babylonjscore_Compat.80d9493b.js";import{s as g}from"./test1.fd9db753.js";import"./tslibtslib.b6e59fa7.js";import"./@babylonjscore_ShadersWGSL.440a023d.js";import"./@babylonjscore_Inputs.ab1ffb62.js";import"../entry/index.7a3f4234.js";class mt{constructor(e,i){n(this,"scene");n(this,"sideVerticalLength",40);n(this,"sideHorizontalLength",40);n(this,"deepLength",10);this.scene=e,this.sideVerticalLength=(i==null?void 0:i.v)||this.sideVerticalLength,this.sideHorizontalLength=(i==null?void 0:i.h)||this.sideHorizontalLength,this.deepLength=(i==null?void 0:i.d)||this.deepLength;{const t=new d("SceneBoardMaterial");t.emissiveColor=new h(...g.map(a=>a/5*4)),t.specularColor=new h(0);let p=s.CreateGround("ground",{width:this.deepLength,height:this.sideVerticalLength});p.physicsImpostor=new o(p,o.BoxImpostor,{mass:0,restitution:1,friction:1}),p.material=t,p.receiveShadows=!0}{let t=s.CreatePlane("wallRight",{width:this.deepLength,height:this.sideHorizontalLength,sideOrientation:0});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.z=this.sideVerticalLength/2,t.physicsImpostor=new o(t,o.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=s.CreatePlane("wallLeft",{width:this.deepLength,height:this.sideHorizontalLength,sideOrientation:1});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.z=-this.sideVerticalLength/2,t.physicsImpostor=new o(t,o.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=s.CreatePlane("wallBack",{width:this.sideVerticalLength,height:this.sideHorizontalLength,sideOrientation:1});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.x=-this.deepLength/2,t.rotation.y=Math.PI/2,t.physicsImpostor=new o(t,o.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=s.CreatePlane("wallLimit",{width:this.sideVerticalLength,height:this.sideHorizontalLength,sideOrientation:0});t.position.y=this.sideHorizontalLength/2,t.rotation.y=Math.PI/2,t.position.x=this.deepLength/2,t.physicsImpostor=new o(t,o.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=s.CreatePlane("wallLimitTop",{width:this.deepLength,height:this.sideVerticalLength,sideOrientation:1});t.position.y=this.sideHorizontalLength,t.rotation.x=Math.PI/2,t.physicsImpostor=new o(t,o.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}}}export{mt as default};
