var l=Object.defineProperty;var u=(h,s,t)=>s in h?l(h,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[s]=t;var o=(h,s,t)=>(u(h,typeof s!="symbol"?s+"":s,t),t);import"./@babylonjsloaders_glTF.ffdc2402.js";import"./@babylonjscore_abstractScene.a7cd866f.js";import"./@babylonjscore_Actions.158dcbad.js";import"./@babylonjscore_Animations.f48af9b8.js";import{C as n,a as c}from"./@babylonjscore_Maths.4b8bfdd1.js";import"./@babylonjscore_assetContainer.e5458d3d.js";import"./@babylonjscore_Engines.77a493e8.js";import"./@babylonjscore_Misc.5aaba58d.js";import"./@babylonjscore_Audio.5a89a5be.js";import"./@babylonjscore_BakedVertexAnimation.acd81c74.js";import{S as M,P as b}from"./@babylonjscore_Materials.d4538583.js";import"./@babylonjscore_Behaviors.d1e74062.js";import"./@babylonjscore_Bones.ba22abaa.js";import"./@babylonjscore_Buffers.c351261b.js";import"./@babylonjscore_Cameras.05e2a1ea.js";import"./@babylonjscore_PostProcesses.6391d89e.js";import"./@babylonjscore_Collisions.34f617c2.js";import"./@babylonjscore_Compute.87c199bd.js";import"./@babylonjscore_Culling.bdb6ff26.js";import"./@babylonjscore_Debug.00e30656.js";import{M as P,p}from"./@babylonjscore_Meshes.9ddea1c8.js";import{P as r}from"./@babylonjscore_Physics.de0651cc.js";import"./@babylonjscore_Rendering.1459be29.js";import"./@babylonjscore_DeviceInput.3472c178.js";import"./@babylonjscore_Events.25582a49.js";import"./@babylonjscore_Gamepads.c8cefd4c.js";import"./@babylonjscore_Gizmos.559fb6cb.js";import"./@babylonjscore_Helpers.708c9eff.js";import"./@babylonjscore_Instrumentation.094ff3ea.js";import"./@babylonjscore_Layers.2238d076.js";import"./@babylonjscore_LensFlares.78df8085.js";import"./@babylonjscore_Lights.894f8849.js";import{S as y}from"./@babylonjscore_Loading.2301728b.js";import"./@babylonjscore_Morph.a417435c.js";import"./@babylonjscore_node.47978260.js";import"./@babylonjscore_Offline.556ea374.js";import"./@babylonjscore_Particles.f14de036.js";import"./@babylonjscore_Probes.bbdf8313.js";import"./@babylonjscore_scene.c0faa314.js";import"./@babylonjscore_sceneComponent.5f0854c6.js";import"./@babylonjscore_Sprites.ef926da7.js";import"./@babylonjscore_States.f9db8fc7.js";import"./@babylonjscore_Shaders.02c89b72.js";import"./@babylonjscore_XR.06738b8c.js";import"./@babylonjscore_Compat.1e5a884f.js";import"./tslibtslib.b6e59fa7.js";import"./@babylonjscore_ShadersWGSL.25de9c3d.js";import"./@babylonjscore_Inputs.8bce44d7.js";class us{constructor(s,t){o(this,"scene");o(this,"mesh");o(this,"subPhysicMeshes",[]);o(this,"shadowMesh");o(this,"springStickPosition");o(this,"staticStickPosition");o(this,"modulePromise");this.scene=t;const i={x:0,y:0,z:0};this.mesh=new P("moduleDiscObj",this.scene),this.mesh.isVisible=!1;const a=new M("");a.alpha=.5,a.emissiveColor=n.Red(),this.buildSubMesh(s),this.subPhysicMeshes.forEach(m=>{m.isVisible=!1}),this.modulePromise=y.LoadAssetContainerAsync("/module/",this.getModuleName(s),this.scene).then(m=>{m.addAllToScene();const e=m.meshes[1];this.shadowMesh=e,e.name="letter-"+s,e.receiveShadows=!0,console.log(e.material),e.material instanceof b&&(e.material.ambientColor=n.White().scale(1)),this.mesh.addChild(e),this.subPhysicMeshes.forEach(d=>{this.mesh.addChild(d)}),this.mesh.setAbsolutePosition(new c(i.x,i.y,i.z)),this.mesh.scaling=c.One().scale(8)})}usePhysicsImpostor(){this.mesh.physicsImpostor||(this.subPhysicMeshes.forEach(s=>s.physicsImpostor=new r(s,r.BoxImpostor)),this.mesh.physicsImpostor=new r(this.mesh,r.NoImpostor,{mass:1,friction:1,restitution:0},this.scene))}buildSubMesh(s){let t=0;switch(s){case"A":{{const i=p.CreateBox("A1",{height:.76,width:.22,depth:.1},this.scene);i.name=s+t++,i.rotation.x=Math.PI/180*23,i.position.z-=.14,i.position.y+=.08,this.subPhysicMeshes.push(i)}{const i=p.CreateBox("A2",{height:.76,width:.22,depth:.1},this.scene);i.name=s+t++,i.rotation.x=-Math.PI/180*23,i.position.z+=.14,i.position.y+=.08,this.subPhysicMeshes.push(i)}{const i=p.CreateBox("A3",{height:.1,width:.22,depth:.4},this.scene);i.name=s+t++,i.position.y-=.005,this.subPhysicMeshes.push(i)}}}}getModuleName(s){switch(s){case"A":return"letterA.gltf"}throw"no matched module"}}export{us as default};
