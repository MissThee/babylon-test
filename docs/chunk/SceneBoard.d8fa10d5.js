var x=Object.defineProperty;var A=(m,o,e)=>o in m?x(m,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):m[o]=e;var v=(m,o,e)=>(A(m,typeof o!="symbol"?o+"":o,e),e);import"./@babylonjscore_abstractScene.a7cd866f.js";import"./@babylonjscore_Actions.158dcbad.js";import"./@babylonjscore_Animations.f48af9b8.js";import{C}from"./@babylonjscore_Maths.4b8bfdd1.js";import"./@babylonjscore_assetContainer.e5458d3d.js";import"./@babylonjscore_Engines.77a493e8.js";import"./@babylonjscore_Misc.5aaba58d.js";import"./@babylonjscore_Audio.5a89a5be.js";import"./@babylonjscore_BakedVertexAnimation.acd81c74.js";import{N as M,A as p,F,G as S,L as k,J as H,K as y,O as W,Q as N,W as G,X as j}from"./@babylonjscore_Materials.d4538583.js";import"./@babylonjscore_Behaviors.d1e74062.js";import"./@babylonjscore_Bones.ba22abaa.js";import"./@babylonjscore_Buffers.c351261b.js";import"./@babylonjscore_Cameras.05e2a1ea.js";import"./@babylonjscore_PostProcesses.6391d89e.js";import"./@babylonjscore_Collisions.34f617c2.js";import"./@babylonjscore_Compute.87c199bd.js";import"./@babylonjscore_Culling.bdb6ff26.js";import"./@babylonjscore_Debug.00e30656.js";import{p as b}from"./@babylonjscore_Meshes.9ddea1c8.js";import{P as i}from"./@babylonjscore_Physics.de0651cc.js";import"./@babylonjscore_Rendering.1459be29.js";import"./@babylonjscore_DeviceInput.3472c178.js";import"./@babylonjscore_Events.25582a49.js";import"./@babylonjscore_Gamepads.c8cefd4c.js";import"./@babylonjscore_Gizmos.559fb6cb.js";import"./@babylonjscore_Helpers.708c9eff.js";import"./@babylonjscore_Instrumentation.094ff3ea.js";import"./@babylonjscore_Layers.2238d076.js";import"./@babylonjscore_LensFlares.78df8085.js";import"./@babylonjscore_Lights.894f8849.js";import"./@babylonjscore_Loading.2301728b.js";import"./@babylonjscore_Morph.a417435c.js";import"./@babylonjscore_node.47978260.js";import"./@babylonjscore_Offline.556ea374.js";import"./@babylonjscore_Particles.f14de036.js";import"./@babylonjscore_Probes.bbdf8313.js";import"./@babylonjscore_scene.c0faa314.js";import"./@babylonjscore_sceneComponent.5f0854c6.js";import"./@babylonjscore_Sprites.ef926da7.js";import"./@babylonjscore_States.f9db8fc7.js";import"./@babylonjscore_Shaders.02c89b72.js";import"./@babylonjscore_XR.06738b8c.js";import"./@babylonjscore_Compat.1e5a884f.js";import{s as V}from"./test1.c4fbffc8.js";import"./tslibtslib.b6e59fa7.js";import"./@babylonjscore_ShadersWGSL.25de9c3d.js";import"./@babylonjscore_Inputs.8bce44d7.js";import"../entry/index.c5bcc28b.js";class D extends M{constructor(o={shadowColor:C.Black(),meshColor:C.White()},e){super("node",e);const t=new p("position");t.visibleInInspector=!1,t.visibleOnFrame=!1,t.target=1,t.setAsAttribute("position");const n=new F("worldPos");n.visibleInInspector=!1,n.visibleOnFrame=!1,n.target=1,n.complementZ=0,n.complementW=1;const h=new p("world");h.visibleInInspector=!1,h.visibleOnFrame=!1,h.target=1,h.setAsSystemValue(S.World);const r=new F("World normal");r.visibleInInspector=!1,r.visibleOnFrame=!1,r.target=1,r.complementZ=0,r.complementW=0;const L=new p("normal");L.visibleInInspector=!1,L.visibleOnFrame=!1,L.target=1,L.setAsAttribute("normal");const a=new k("Lights");a.visibleInInspector=!1,a.visibleOnFrame=!1,a.target=3;const O=new p("cameraPosition");O.visibleInInspector=!1,O.visibleOnFrame=!1,O.target=1,O.setAsSystemValue(S.CameraPosition);const d=new H("Add");d.visibleInInspector=!1,d.visibleOnFrame=!1,d.target=4;const u=new y("Scale");u.visibleInInspector=!1,u.visibleOnFrame=!1,u.target=4;const f=new p("Mesh color");f.visibleInInspector=!1,f.visibleOnFrame=!1,f.target=1,f.value=o.meshColor,f.isConstant=!1;const g=new y("Scale");g.visibleInInspector=!1,g.visibleOnFrame=!1,g.target=4;const w=new y("Scale");w.visibleInInspector=!1,w.visibleOnFrame=!1,w.target=4;const I=new p("Shadow color");I.visibleInInspector=!0,I.visibleOnFrame=!1,I.target=1,I.value=o.shadowColor,I.isConstant=!1;const T=new W("One minus");T.visibleInInspector=!1,T.visibleOnFrame=!1,T.target=4;const s=new p("Shadow color strength");s.visibleInInspector=!1,s.visibleOnFrame=!1,s.target=1,s.value=1,s.min=0,s.max=1,s.isBoolean=!1,s.matrixMode=0,s.animationType=N.None,s.isConstant=!1;const l=new G("fragmentOutput");l.visibleInInspector=!1,l.visibleOnFrame=!1,l.target=2,l.convertToGammaSpace=!1,l.convertToLinearSpace=!1,l.useLogarithmicDepth=!1;const c=new F("worldPos * viewProjectionTransform");c.visibleInInspector=!1,c.visibleOnFrame=!1,c.target=1,c.complementZ=0,c.complementW=1;const P=new p("viewProjection");P.visibleInInspector=!1,P.visibleOnFrame=!1,P.target=1,P.setAsSystemValue(S.ViewProjection);const B=new j("vertexOutput");B.visibleInInspector=!1,B.visibleOnFrame=!1,B.target=1,t.output.connectTo(n.vector),h.output.connectTo(n.transform),n.output.connectTo(c.vector),P.output.connectTo(c.transform),c.output.connectTo(B.vector),f.output.connectTo(u.input),n.output.connectTo(a.worldPosition),L.output.connectTo(r.vector),h.output.connectTo(r.transform),r.output.connectTo(a.worldNormal),O.output.connectTo(a.cameraPosition),a.shadow.connectTo(u.factor),u.output.connectTo(d.left),I.output.connectTo(w.input),a.shadow.connectTo(T.input),T.output.connectTo(w.factor),w.output.connectTo(g.input),s.output.connectTo(g.factor),g.output.connectTo(d.right),d.output.connectTo(l.rgb),this.addOutputNode(B),this.addOutputNode(l),this.build()}}var Z=D;class Gt{constructor(o,e){v(this,"scene");v(this,"sideVerticalLength",40);v(this,"sideHorizontalLength",40);v(this,"deepLength",10);v(this,"groundBoard");this.scene=o,this.sideVerticalLength=(e==null?void 0:e.v)||this.sideVerticalLength,this.sideHorizontalLength=(e==null?void 0:e.h)||this.sideHorizontalLength,this.deepLength=(e==null?void 0:e.d)||this.deepLength;{let t=b.CreateGround("ground",{width:this.deepLength,height:this.sideVerticalLength});t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.receiveShadows=!0,t.material=new Z({shadowColor:new C(...V).scale(.94),meshColor:new C(...V)},o),this.groundBoard=t}{let t=b.CreatePlane("wallRight",{width:this.deepLength,height:this.sideHorizontalLength,sideOrientation:0});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.z=this.sideVerticalLength/2,t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=b.CreatePlane("wallLeft",{width:this.deepLength,height:this.sideHorizontalLength,sideOrientation:1});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.z=-this.sideVerticalLength/2,t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=b.CreatePlane("wallBack",{width:this.sideVerticalLength,height:this.sideHorizontalLength,sideOrientation:1});t.renderingGroupId=99,t.position.y=this.sideHorizontalLength/2,t.position.x=-this.deepLength/2,t.rotation.y=Math.PI/2,t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=b.CreatePlane("wallLimit",{width:this.sideVerticalLength,height:this.sideHorizontalLength,sideOrientation:0});t.position.y=this.sideHorizontalLength/2,t.rotation.y=Math.PI/2,t.position.x=this.deepLength/2,t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}{let t=b.CreatePlane("wallLimitTop",{width:this.deepLength,height:this.sideVerticalLength,sideOrientation:1});t.position.y=this.sideHorizontalLength,t.rotation.x=Math.PI/2,t.physicsImpostor=new i(t,i.BoxImpostor,{mass:0,restitution:1,friction:1}),t.isVisible=!1}}}export{Gt as default};
