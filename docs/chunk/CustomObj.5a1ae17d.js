var c=Object.defineProperty;var u=(e,i,t)=>i in e?c(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var m=(e,i,t)=>(u(e,typeof i!="symbol"?i+"":i,t),t);import{A as o}from"./@babylonjscore_Animations.615099a9.js";import"./@babylonjscore_abstractScene.d5c48c49.js";import"./@babylonjscore_Actions.7cce3f43.js";import{a as n,C as a}from"./@babylonjscore_Maths.f3ef132c.js";import"./@babylonjscore_assetContainer.cba3bd62.js";import"./@babylonjscore_Engines.7287f97a.js";import"./@babylonjscore_Misc.d81f49ec.js";import"./@babylonjscore_Audio.4b8bc6d9.js";import"./@babylonjscore_BakedVertexAnimation.61d84081.js";import{S as f,b as O}from"./@babylonjscore_Materials.00e32dae.js";import"./@babylonjscore_Behaviors.df7c289a.js";import"./@babylonjscore_Bones.4bdc5845.js";import"./@babylonjscore_Buffers.f937a5fd.js";import"./@babylonjscore_Cameras.db49b33d.js";import"./@babylonjscore_PostProcesses.4413212a.js";import"./@babylonjscore_Collisions.6bd46217.js";import"./@babylonjscore_Compute.71e01459.js";import"./@babylonjscore_Culling.457ad209.js";import"./@babylonjscore_Debug.c6d392dc.js";import{p as I}from"./@babylonjscore_Meshes.307935b5.js";import{P as l}from"./@babylonjscore_Physics.24606c9c.js";import"./@babylonjscore_Rendering.3a43e73e.js";import"./@babylonjscore_DeviceInput.c0f43152.js";import"./@babylonjscore_Events.8e5561d2.js";import"./@babylonjscore_Gamepads.ef488051.js";import"./@babylonjscore_Gizmos.8d63c4cf.js";import"./@babylonjscore_Helpers.51c9113b.js";import"./@babylonjscore_Instrumentation.93aca872.js";import"./@babylonjscore_Layers.c0605bf5.js";import"./@babylonjscore_LensFlares.ff1874ee.js";import"./@babylonjscore_Lights.ab2a2b54.js";import"./@babylonjscore_Loading.6509a8cd.js";import"./@babylonjscore_Morph.df37bd75.js";import"./@babylonjscore_node.60f33419.js";import"./@babylonjscore_Offline.9556dedd.js";import"./@babylonjscore_Particles.ea0a1760.js";import"./@babylonjscore_Probes.43ac1e9d.js";import"./@babylonjscore_scene.fc9d9dc0.js";import"./@babylonjscore_sceneComponent.4b70ec43.js";import"./@babylonjscore_Sprites.b7f7c371.js";import"./@babylonjscore_States.219926cb.js";import"./@babylonjscore_Shaders.73b25e8e.js";import"./@babylonjscore_XR.7f7d2945.js";import"./@babylonjscore_Compat.80d9493b.js";import"./tslibtslib.b6e59fa7.js";import"./@babylonjscore_ShadersWGSL.440a023d.js";import"./@babylonjscore_Inputs.ab1ffb62.js";class li{constructor(i,t="CustomObj",s){m(this,"scene");m(this,"mesh");m(this,"material");m(this,"isLockedPosition",!1);m(this,"options");this.options=s,this.scene=i,this.mesh=I.CreateBox(t,{size:2},this.scene),this.mesh.isPickable=!0,this.useMaterial(),this.initAnimation(),this.mesh.scaling=n.Zero()}initAnimation(){let i=new o("showOn","scaling",60,o.ANIMATIONTYPE_VECTOR3,o.ANIMATIONLOOPMODE_CONSTANT);i.setKeys([{frame:0,value:n.Zero()},{frame:10,value:new n(1,1,1)}]),this.mesh.animations.push(i)}show(){return new Promise(i=>{this.scene.beginAnimation(this.mesh,0,10,!1,1,i)})}useMaterial(){var i,t,s,r;this.mesh.material||(t=(i=this.options)==null?void 0:i.materialOpt)!=null&&t.textureUrl&&(this.material=new f("textMaterial",this.scene),this.material.diffuseTexture=new O((r=(s=this.options)==null?void 0:s.materialOpt)==null?void 0:r.textureUrl),this.material.emissiveColor=new a(1,1,1),this.material.specularColor=a.Black(),this.mesh.material=this.material)}usePhysicsImpostor(){this.mesh.physicsImpostor&&!this.mesh.physicsImpostor.isDisposed||(this.mesh.physicsImpostor=new l(this.mesh,l.BoxImpostor,{mass:1,restitution:0,friction:1},this.scene))}lockObj(i){var t;if(this.isLockedPosition=!!i,this.isLockedPosition){(t=this.mesh.physicsImpostor)==null||t.dispose();const s=10,r=1.5,h=new o("lockPosition","position",s,o.ANIMATIONTYPE_VECTOR3);h.setKeys([{frame:0,value:this.mesh.position},{frame:s*r,value:new n(...(i==null?void 0:i.position)||[])}]),this.mesh.animations.push(h);const p=new o("lockRotation","rotation",s,o.ANIMATIONTYPE_VECTOR3);p.setKeys([{frame:0,value:this.mesh.rotation},{frame:s*r,value:new n(...(i==null?void 0:i.rotation)||[])}]),this.mesh.animations.push(p),this.scene.beginAnimation(this.mesh,0,s*r,!1,4)}else this.usePhysicsImpostor()}}export{li as default};
