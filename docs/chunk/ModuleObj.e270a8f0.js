var l=Object.defineProperty;var c=(t,s,e)=>s in t?l(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var o=(t,s,e)=>(c(t,typeof s!="symbol"?s+"":s,e),e);import"./ExtrasAsMetadata.3bb18f14.js";import{M as p,S as d,C as a,h as u,i as P,V as n,f as h}from"./test1.f9a123a5.js";import"../entry/index.a7674415.js";class M{constructor(s){o(this,"scene");o(this,"mesh");o(this,"springStickPosition");o(this,"staticStickPosition");o(this,"modulePromise");const e={x:0,y:0,z:0};this.scene=s,this.mesh=p.CreateSphere("moduleObj",{},this.scene);const r=new d("",s);r.emissiveColor=new a(0,0,1),r.specularColor=a.Black(),r.alpha=.1,this.mesh.material=r,this.modulePromise=u.ImportMeshAsync(null,"/module/","letterA.gltf").then(({meshes:m})=>{const i=m[1];i.material instanceof P&&(i.material.ambientColor=a.White()),this.mesh.addChild(i),i.position.y-=.13,i.setPivotPoint(i.getBoundingInfo().boundingBox.centerWorld),this.mesh.setAbsolutePosition(new n(e.x,e.y,e.z)),this.mesh.scaling=n.One().scale(4)})}usePhysicsImpostor(){this.mesh.physicsImpostor||(this.mesh.physicsImpostor=new h(this.mesh,h.SphereImpostor,{mass:1,friction:1,restitution:0},this.scene))}}export{M as default};
